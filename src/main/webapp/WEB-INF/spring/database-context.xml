<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- mybatis를 사용하기 위해 객체를 생성 -->
	<!-- bean/bean은 Spring이 객체를 만드는 코드 -->
	<!-- 어느 패키지에 있는가? class, 이름이 무엇인가? id -->
	<!-- dataSource가 우리가 만든 DBConnection의 역할을 한다 -->
	<!-- Connection -->
	<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
		<!-- Class기 때문에 Setter를 이용한다 -->
		<!-- setter 호출 : property -->
		<property name="username" value="user01"></property>
		<property name="password" value="user01"></property>
		<property name="url" value="jdbc:oracle:thin:@192.168.1.129:1521:xe"></property>
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<!-- 생성자 호출 constructor-arg -->
		<!-- <constructor-arg></constructor-arg> -->
	</bean>
	
	<!-- DB와 Mapper의 위치를 알려주고 연결하는 역할을 하는 객체 -->
	<!-- bean을 만드는 공장이다~ 다 적고나면 에러가 사라지는데, 남아있다면 오타가 난 것 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactoryBean">
		<!-- 1. DB 연결 // 레퍼런스타입은 참조값을 ref로 값을 입력 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 2. SQL문이 있는 Mapper의 위치 -->
		<!-- classpath : WEB-INF 아래에 classes폴더를 말함 // 그리고 다른 패키지들도 mapper를 만들어야하니까 *Mapper.xml로 -->
		<property name="mapperLocations" value="classpath:database/mappers/*Mapper.xml"></property>
	</bean>

	<!-- 최종적으로 Java에서 가져다 쓰는 것 : sqlSession -->
	<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
		<!-- bean은 new 생성자()인데, 아래의 클래스는 default 생성자가 없기 때문에 에러가 뜬다. 그래서 매개변수가 있는 생성자를 만들어주자 -->
		<!-- 매개변수 구분은 index/type/name 등으로 구분하는데, name이 편하다 -->
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"></constructor-arg>
	</bean>

</beans>
