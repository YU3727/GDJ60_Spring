<?xml version="1.0" encoding="UTF-8"?>
<!-- 여기에 속해있는 Schema를 쓸 수 있다. -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 230206 2~4교시 -->  
  
  <!-- mapper로 전체를 감싸야한다. -->
  <!-- mybatis에 선언한대로 작업을 mybatis에서 수행해줄것이다. -->
  <!-- 관련 태그를 다 만들어놨다. Query문은 content영역에 쓰면 됨. -->
  <!-- *namespace의 이름은 사용하려는 DAO의 풀패키지명으로 작성 -->
  <!-- **id의 이름은 DAO내 사용하려는 메서드의 이름으로 작성 -->
  
  <mapper namespace="com.pooh.s1.product.productDAO">
 	<!-- resultType : 어디에 담아서 리턴해줄거냐? 이것 또한 풀패키지명을 써줘야한다 -->
  	<select id="getProductList" resultType="com.pooh.s1.product.ProductDTO" statementType="PREPARED">
  		SELECT PRODUCTNUM, PRODUCTNAME, PRODUCTSCORE
  		FROM PRODUCT
  		ORDER BY PRODUCTSCORE DESC
  		<!-- 끝나고 ;를 자동으로 찍어주기 때문에 생략해주면 된다. -->
  	</select>
  	
  	<!-- Detail -->
  	<!-- parameterType -->
  	<!-- parameterType는 ?에 들어올 dataType을 써야하는데, import기능이 없기때문에 풀패키지명을 써줘야한다. -->
  	<!-- ?로 써두면 ProductDTO에서 뭘 꺼내야할지 모르기 때문에, #{}를 사용한다. -->
  	<!-- jsp에는 EL로${}을 쓰지만 Mapper에서는 #{}을 쓴다. 유사하게 생겼기 때문에 주의하자. -->
  	<!-- resultType -->
  	<!-- 무슨타입이 들어올지 모르기 때문에 표시해줌. 어디에 담아서 리턴해줄거냐? 이것 또한 풀패키지명을 써줘야한다. -->
  	<select id="getProductDetail" parameterType="ProductDTO" resultType="ProductDTO">
  		SELECT *
  		FROM PRODUCT
  		<!-- #{}의 중괄호 내에는 getter를 쓰면 됨.(get 떼고, 나머지글자의 첫글자를 소문자로) -->
  		WHERE PRODUCTNUM = #{productNum}
  	</select>
  	
  	<!-- setAddProduct -->
  	<!-- productNum은 어딘가에서 꺼내올거다 -> parameterType이 필요함 -->
  	<!-- resultType은 항상 int가 결과값으로 나온다. 그래서 따로 resultType을 쓰지 않음. select만 -->
  	<insert id="setAddProduct" parameterType="ProductDTO"> <!-- config 만들기 전에 원래주소는 "com.pooh.s1.product.ProductDTO" -->
  		INSERT INTO PRODUCT
  		<!-- #{getter의 이름} -->
  		VALUES(#{productNum}, #{productName}, #{productDetail}, 0.0)
  	</insert>
  	
  	<!-- setProductDelete -->
  	<!-- DTO가 아닌 Primitive Type(Wrapper 클래스)/String를 쓰려면 DAO에서 넘겨주는 변수명을 쓴다. -->
  	<delete id="setProductDelete" parameterType="Long">
  	<!-- DAO에서 넘겨주는 변수명을 #{}내에 쓴다. 가끔 버그가 발생할 수 있음. 그러니까 그냥 DTO 써라 -->
  		DELETE PRODUCT WHERE PRODUCTNUM = #{productNum}
  	</delete>
  	
	<!-- 나중에 기능을 만들겠다고 미리 써놓으면 에러가 발생함. 사용할 거만 만들어둬야한다.
		+ Mapper도 schema 넣고 namespace까지는 넣어야 에러가 안뜬다 <mapper namespace=""></mapper>
	  	<select id=""></select>
		<insert id=""></insert>
  		<update id=""></update>
  		<delete id=""></delete>
  		-->  	
  </mapper>